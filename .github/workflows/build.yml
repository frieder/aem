name: Container Image
run-name: Container Image (${{ inputs.version }})

on:
  workflow_dispatch:
    inputs:
      version:
        description: SDK version
        type: choice
        options:
          - stable
          - latest
        required: true
        default: stable

env:
  REGISTRY: ghcr.io
  NAMESPACE: frieder

jobs:
  aem:
    name: Build AEM Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Container Registry Login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Prepare Build Data
        id: init
        run: |
          curl -u "${{ secrets.REPO_USER }}:${{ secrets.REPO_PASS }}" \
            -o ./versions.json \
            -L ${{ secrets.REPO_URL }}/repository/files/sdk/versions.json
          export value=$(jq -r '.${{ inputs.version }}' ./versions.json)
          echo "binary=$(echo $value)" >> $GITHUB_OUTPUT
          echo "version=$(echo $value | grep -oP 'aem-sdk-\K\d+\.\d+')" >> $GITHUB_OUTPUT
          echo "date=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "rev=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Download AEM SDK Archive
        run: |
          curl -u "${{ secrets.REPO_USER }}:${{ secrets.REPO_PASS }}" \
               -o ./aem-sdk.zip \
               -L ${{ secrets.REPO_URL }}/repository/files/sdk/archives/${{ steps.init.outputs.binary }}
          unzip ./aem-sdk.zip -d ./tmp/
          mv ./tmp/aem-sdk-quickstart*.jar ./tmp/aem-sdk-quickstart.jar
          curl -u "${{ secrets.REPO_USER }}:${{ secrets.REPO_PASS }}" \
               -o ./tmp/license.properties \
               -L ${{ secrets.REPO_URL }}/repository/files/sdk/license/license.properties

      - name: Build & Push Container Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/aem:${{ inputs.version }}
            ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/aem:${{ steps.init.outputs.version }}
          labels: |
            org.opencontainers.image.title=AEM Container Image
            org.opencontainers.image.url=https://github.com/frieder/aem
            org.opencontainers.image.created=${{ steps.init.outputs.date }}
            org.opencontainers.image.revision=${{ steps.init.outputs.rev }}
            org.opencontainers.image.version=${{ steps.init.outputs.version }}
